"""Initial migration

Revision ID: d432a66c8e6e
Revises: 
Create Date: 2024-06-04 23:29:09.332910

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "d432a66c8e6e"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "games",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "type",
            sa.Enum("MULTIPLAYER", "SINGLE", "ANALYSIS", name="gametype"),
            nullable=False,
        ),
        sa.Column("players_number", sa.Integer(), nullable=False),
        sa.Column("is_finished", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column("finished_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_games_id"), "games", ["id"], unique=False)
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("hashed_password", sa.String(length=1024), nullable=False),
        sa.Column("elo", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("username"),
    )
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "friendships",
        sa.Column(
            "status",
            sa.Enum(
                "REQUESTED", "ACCEPTED", "DECLINED", name="friendshipstatus"
            ),
            nullable=False,
        ),
        sa.Column("left_user_id", sa.UUID(), nullable=False),
        sa.Column("right_user_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["left_user_id"], ["users.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["right_user_id"], ["users.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("left_user_id", "right_user_id"),
    )
    op.create_table(
        "game_players",
        sa.Column("game_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["game_id"], ["games.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("game_id", "user_id"),
    )
    op.create_table(
        "game_winners",
        sa.Column("game_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["game_id"], ["games.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("game_id", "user_id"),
    )
    op.create_table(
        "lobbies",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column("leader_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["leader_id"], ["users.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", "leader_id"),
        sa.UniqueConstraint("id"),
    )
    op.create_index(op.f("ix_lobbies_id"), "lobbies", ["id"], unique=False)
    op.create_table(
        "sets",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "trump_suit",
            sa.Enum("H", "D", "C", "S", name="suit"),
            nullable=True,
        ),
        sa.Column("trump_value", sa.Integer(), nullable=True),
        sa.Column("round_name", sa.String(), nullable=False),
        sa.Column("is_current_round", sa.Boolean(), nullable=False),
        sa.Column("dealer_id", sa.UUID(), nullable=False),
        sa.Column("opening_player_id", sa.UUID(), nullable=False),
        sa.Column("game_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["dealer_id"], ["users.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["game_id"], ["games.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["opening_player_id"], ["users.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_sets_id"), "sets", ["id"], unique=False)
    op.create_table(
        "dealings",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("set_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["set_id"], ["sets.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "set_id", name="_user_set_uc"),
    )
    op.create_index(op.f("ix_dealings_id"), "dealings", ["id"], unique=False)
    op.create_table(
        "entries",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("owner_id", sa.UUID(), nullable=False),
        sa.Column("set_id", sa.UUID(), nullable=False),
        sa.Column("is_finished", sa.Boolean(), nullable=False),
        sa.Column("finished_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["owner_id"], ["users.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["set_id"], ["sets.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_entries_id"), "entries", ["id"], unique=False)
    op.create_table(
        "lobby_players",
        sa.Column("lobby_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["lobby_id"], ["lobbies.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("lobby_id", "user_id"),
    )
    op.create_table(
        "cards",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "suit", sa.Enum("H", "D", "C", "S", name="suit"), nullable=False
        ),
        sa.Column("value", sa.Integer(), nullable=False),
        sa.Column("dealing_id", sa.UUID(), nullable=False),
        sa.Column("entry_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["dealing_id"], ["dealings.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["entry_id"], ["entries.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_cards_id"), "cards", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_cards_id"), table_name="cards")
    op.drop_table("cards")
    op.drop_table("lobby_players")
    op.drop_index(op.f("ix_entries_id"), table_name="entries")
    op.drop_table("entries")
    op.drop_index(op.f("ix_dealings_id"), table_name="dealings")
    op.drop_table("dealings")
    op.drop_index(op.f("ix_sets_id"), table_name="sets")
    op.drop_table("sets")
    op.drop_index(op.f("ix_lobbies_id"), table_name="lobbies")
    op.drop_table("lobbies")
    op.drop_table("game_winners")
    op.drop_table("game_players")
    op.drop_table("friendships")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_games_id"), table_name="games")
    op.drop_table("games")
    # ### end Alembic commands ###
